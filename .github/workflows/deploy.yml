name: Reusable Workflow for deploying container image

on:
  workflow_call:
    inputs:
      name:
        description: 'Deployment name'
        required: true
        type: string
      environment:
        description: 'Deployment environment'
        required: true
        type: string
      tag:
        description: 'Image tag'
        required: true
        type: string
      deployRepo:
        description: 'Deployment repo name'
        required: false
        type: string
        default: refuel4/flux-applications
      deployBranch:
        description: 'Deployment repo branch'
        required: false
        type: string
        default: 'development'
      deployPath:
        description: 'Deployment path'
        required: false
        type: string
        default: 'deployments'
    secrets:
      SLACK_WEBHOOK_URL:
        required: true
      SSH_KEY:
        required: true


jobs:
  deploy:
    name: Deploy ${{ inputs.tag }} to ${{ inputs.environment }} ${{ inputs.name }}

    runs-on:
      - self-hosted
      - builder

    steps:
      - name: Checkout Deployment Repo
        uses: actions/checkout@v2
        with:
          repository: ${{ inputs.deployRepo }}
          ref: ${{ inputs.deployBranch }}
          ssh-key: ${{ secrets.SSH_KEY }}

      - name: Set image tag
        run: |
          cd ${{ inputs.deployPath }}/${{ inputs.name }}/${{ inputs.environment }}
          sed -i "s|newTag:.*|newTag: ${{ inputs.tag }}|g" kustomization.yaml
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions.noreply@creadits.com"
          git add .
          git commit -m "chore: update ${{ inputs.name }}/${{ inputs.environment }} to ${{ inputs.tag }}" -m "by: ${{ github.actor }}" || true
          git push -u origin ${{ inputs.deployBranch }}

      - name: Notify
        uses: 8398a7/action-slack@v3
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          fields: repo,author,job,took
          job_name: 'Deploy ${{ inputs.tag }} to ${{ inputs.environment }} ${{ inputs.name }}'
          author_name: 'Started by ${{ github.actor }}'

